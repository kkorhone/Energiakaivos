function out = model
%
% model5x5.m
%
% Model exported on Oct 22 2018, 10:45 by COMSOL 5.3.0.223.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('E:\Work\Helsingin_Geoenergiapotentiaali\Geothermal_Potential_2');

model.label('model5x5.mph');

model.comments(['Model5x5\n\n']);

model.param.set('L_borehole', '300[m]');
model.param.set('r_borehole', '70[mm]');
model.param.set('H_model', '500[m]');
model.param.set('borehole_spacing', '20[m]');
model.param.set('A_wall', '2*pi*r_borehole*L_borehole+pi*r_borehole^2');
model.param.set('q_geothermal', '40[mW/m^2]');
model.param.set('T_surface', '6[degC]');
model.param.set('k_rock', '3[W/(m*K)]');
model.param.set('Cp_rock', '720[J/(kg*K)]');
model.param.set('rho_rock', '2700[kg/m^3]');
model.param.set('annual_energy_demand', '7.5[MW*h]');
model.param.set('monthly_hours', '730.5[h]');
model.param.set('num_rows', '5');
model.param.set('num_cols', '5');

model.component.create('model_comp', true);

model.component('model_comp').geom.create('model_geom', 3);

model.func.create('piecewise', 'Piecewise');
model.func.create('analytic', 'Analytic');
model.func('piecewise').label('Monthly Profile');
model.func('piecewise').set('funcname', 'monthly_profile');
model.func('piecewise').set('arg', 't');
model.func('piecewise').set('extrap', 'periodic');
model.func('piecewise').set('pieces', {'0/12' '1/12' '0.175';  ...
'1/12' '2/12' '0.107';  ...
'2/12' '3/12' '0.112';  ...
'3/12' '4/12' '0.083';  ...
'4/12' '5/12' '0.045';  ...
'5/12' '6/12' '0.037';  ...
'6/12' '7/12' '0.032';  ...
'7/12' '8/12' '0.035';  ...
'8/12' '9/12' '0.045';  ...
'9/12' '10/12' '0.087';  ...
'10/12' '11/12' '0.119';  ...
'11/12' '12/12' '0.123'});
model.func('piecewise').set('argunit', 'a');
model.func('piecewise').set('fununit', '1');
model.func('analytic').set('funcname', 'T_initial');
model.func('analytic').set('expr', 'T_surface-q_geothermal/k_rock*z');
model.func('analytic').set('args', {'z'});
model.func('analytic').set('argunit', 'm');
model.func('analytic').set('fununit', 'K');
model.func('analytic').set('plotargs', {'z' '0' '1'});

model.component('model_comp').mesh.create('model_mesh');

model.component('model_comp').geom('model_geom').create('work_plane', 'WorkPlane');
model.component('model_comp').geom('model_geom').feature('work_plane').set('quickz', '-L_borehole');
model.component('model_comp').geom('model_geom').feature('work_plane').set('unite', true);
model.component('model_comp').geom('model_geom').feature('work_plane').geom.create('rectangle', 'Rectangle');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('rectangle').set('pos', {'-0.5*borehole_spacing' '-0.5*borehole_spacing'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('rectangle').set('size', {'borehole_spacing' 'borehole_spacing'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.create('circle', 'Circle');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('circle').set('pos', [0 0]);
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('circle').set('r', 'r_borehole');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.create('difference', 'Difference');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('difference').selection('input').set({'rectangle'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('difference').selection('input2').set({'circle'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.create('arr1', 'Array');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('arr1').set('fullsize', {'num_cols' 'num_rows'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('arr1').set('displ', {'borehole_spacing' 'borehole_spacing'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('arr1').selection('input').set({'difference'});
model.component('model_comp').geom('model_geom').feature('work_plane').geom.create('mov1', 'Move');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('mov1').set('displx', '-(num_cols-1)/2*borehole_spacing');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('mov1').set('disply', '-(num_rows-1)/2*borehole_spacing');
model.component('model_comp').geom('model_geom').feature('work_plane').geom.feature('mov1').selection('input').set({'arr1'});
model.component('model_comp').geom('model_geom').create('extrude', 'Extrude');
model.component('model_comp').geom('model_geom').feature('extrude').setIndex('distance', 'L_borehole', 0);
model.component('model_comp').geom('model_geom').feature('extrude').selection('input').set({'work_plane'});
model.component('model_comp').geom('model_geom').create('block', 'Block');
model.component('model_comp').geom('model_geom').feature('block').set('pos', {'-num_cols/2*borehole_spacing' '-num_rows/2*borehole_spacing' '-H_model'});
model.component('model_comp').geom('model_geom').feature('block').set('size', {'num_cols*borehole_spacing' 'num_rows*borehole_spacing' 'H_model-L_borehole'});
model.component('model_comp').geom('model_geom').run;

model.component('model_comp').selection.create('cyl1', 'Cylinder');
model.component('model_comp').selection('cyl1').set('entitydim', 2);
model.component('model_comp').selection.create('cyl2', 'Cylinder');
model.component('model_comp').selection('cyl2').set('entitydim', 2);
model.component('model_comp').selection.create('cyl3', 'Cylinder');
model.component('model_comp').selection('cyl3').set('entitydim', 2);
model.component('model_comp').selection.create('cyl4', 'Cylinder');
model.component('model_comp').selection('cyl4').set('entitydim', 2);
model.component('model_comp').selection.create('cyl5', 'Cylinder');
model.component('model_comp').selection('cyl5').set('entitydim', 2);
model.component('model_comp').selection.create('cyl6', 'Cylinder');
model.component('model_comp').selection('cyl6').set('entitydim', 2);
model.component('model_comp').selection.create('cyl7', 'Cylinder');
model.component('model_comp').selection('cyl7').set('entitydim', 2);
model.component('model_comp').selection.create('cyl8', 'Cylinder');
model.component('model_comp').selection('cyl8').set('entitydim', 2);
model.component('model_comp').selection.create('cyl9', 'Cylinder');
model.component('model_comp').selection('cyl9').set('entitydim', 2);
model.component('model_comp').selection.create('cyl10', 'Cylinder');
model.component('model_comp').selection('cyl10').set('entitydim', 2);
model.component('model_comp').selection.create('cyl11', 'Cylinder');
model.component('model_comp').selection('cyl11').set('entitydim', 2);
model.component('model_comp').selection.create('cyl12', 'Cylinder');
model.component('model_comp').selection('cyl12').set('entitydim', 2);
model.component('model_comp').selection.create('cyl13', 'Cylinder');
model.component('model_comp').selection('cyl13').set('entitydim', 2);
model.component('model_comp').selection.create('cyl14', 'Cylinder');
model.component('model_comp').selection('cyl14').set('entitydim', 2);
model.component('model_comp').selection.create('cyl15', 'Cylinder');
model.component('model_comp').selection('cyl15').set('entitydim', 2);
model.component('model_comp').selection.create('cyl16', 'Cylinder');
model.component('model_comp').selection('cyl16').set('entitydim', 2);
model.component('model_comp').selection.create('cyl17', 'Cylinder');
model.component('model_comp').selection('cyl17').set('entitydim', 2);
model.component('model_comp').selection.create('cyl18', 'Cylinder');
model.component('model_comp').selection('cyl18').set('entitydim', 2);
model.component('model_comp').selection.create('cyl19', 'Cylinder');
model.component('model_comp').selection('cyl19').set('entitydim', 2);
model.component('model_comp').selection.create('cyl20', 'Cylinder');
model.component('model_comp').selection('cyl20').set('entitydim', 2);
model.component('model_comp').selection.create('cyl21', 'Cylinder');
model.component('model_comp').selection('cyl21').set('entitydim', 2);
model.component('model_comp').selection.create('cyl22', 'Cylinder');
model.component('model_comp').selection('cyl22').set('entitydim', 2);
model.component('model_comp').selection.create('cyl23', 'Cylinder');
model.component('model_comp').selection('cyl23').set('entitydim', 2);
model.component('model_comp').selection.create('cyl24', 'Cylinder');
model.component('model_comp').selection('cyl24').set('entitydim', 2);
model.component('model_comp').selection.create('cyl25', 'Cylinder');
model.component('model_comp').selection('cyl25').set('entitydim', 2);
model.component('model_comp').selection('cyl1').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl1').set('top', '+1[mm]');
model.component('model_comp').selection('cyl1').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl1').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl1').set('condition', 'inside');
model.component('model_comp').selection('cyl2').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl2').set('top', '+1[mm]');
model.component('model_comp').selection('cyl2').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl2').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl2').set('condition', 'inside');
model.component('model_comp').selection('cyl3').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl3').set('top', '+1[mm]');
model.component('model_comp').selection('cyl3').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl3').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl3').set('condition', 'inside');
model.component('model_comp').selection('cyl4').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl4').set('top', '+1[mm]');
model.component('model_comp').selection('cyl4').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl4').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl4').set('condition', 'inside');
model.component('model_comp').selection('cyl5').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl5').set('top', '+1[mm]');
model.component('model_comp').selection('cyl5').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl5').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl5').set('condition', 'inside');
model.component('model_comp').selection('cyl6').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl6').set('top', '+1[mm]');
model.component('model_comp').selection('cyl6').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl6').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl6').set('condition', 'inside');
model.component('model_comp').selection('cyl7').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl7').set('top', '+1[mm]');
model.component('model_comp').selection('cyl7').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl7').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl7').set('condition', 'inside');
model.component('model_comp').selection('cyl8').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl8').set('top', '+1[mm]');
model.component('model_comp').selection('cyl8').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl8').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl8').set('condition', 'inside');
model.component('model_comp').selection('cyl9').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl9').set('top', '+1[mm]');
model.component('model_comp').selection('cyl9').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl9').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl9').set('condition', 'inside');
model.component('model_comp').selection('cyl10').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl10').set('top', '+1[mm]');
model.component('model_comp').selection('cyl10').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl10').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl10').set('condition', 'inside');
model.component('model_comp').selection('cyl11').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl11').set('top', '+1[mm]');
model.component('model_comp').selection('cyl11').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl11').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl11').set('condition', 'inside');
model.component('model_comp').selection('cyl12').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl12').set('top', '+1[mm]');
model.component('model_comp').selection('cyl12').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl12').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl12').set('condition', 'inside');
model.component('model_comp').selection('cyl13').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl13').set('top', '+1[mm]');
model.component('model_comp').selection('cyl13').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl13').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl13').set('condition', 'inside');
model.component('model_comp').selection('cyl14').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl14').set('top', '+1[mm]');
model.component('model_comp').selection('cyl14').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl14').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl14').set('condition', 'inside');
model.component('model_comp').selection('cyl15').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl15').set('top', '+1[mm]');
model.component('model_comp').selection('cyl15').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl15').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl15').set('condition', 'inside');
model.component('model_comp').selection('cyl16').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl16').set('top', '+1[mm]');
model.component('model_comp').selection('cyl16').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl16').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl16').set('condition', 'inside');
model.component('model_comp').selection('cyl17').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl17').set('top', '+1[mm]');
model.component('model_comp').selection('cyl17').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl17').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl17').set('condition', 'inside');
model.component('model_comp').selection('cyl18').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl18').set('top', '+1[mm]');
model.component('model_comp').selection('cyl18').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl18').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl18').set('condition', 'inside');
model.component('model_comp').selection('cyl19').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl19').set('top', '+1[mm]');
model.component('model_comp').selection('cyl19').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl19').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl19').set('condition', 'inside');
model.component('model_comp').selection('cyl20').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl20').set('top', '+1[mm]');
model.component('model_comp').selection('cyl20').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl20').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl20').set('condition', 'inside');
model.component('model_comp').selection('cyl21').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl21').set('top', '+1[mm]');
model.component('model_comp').selection('cyl21').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl21').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl21').set('condition', 'inside');
model.component('model_comp').selection('cyl22').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl22').set('top', '+1[mm]');
model.component('model_comp').selection('cyl22').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl22').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl22').set('condition', 'inside');
model.component('model_comp').selection('cyl23').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl23').set('top', '+1[mm]');
model.component('model_comp').selection('cyl23').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl23').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl23').set('condition', 'inside');
model.component('model_comp').selection('cyl24').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl24').set('top', '+1[mm]');
model.component('model_comp').selection('cyl24').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl24').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl24').set('condition', 'inside');
model.component('model_comp').selection('cyl25').set('r', 'r_borehole+1[mm]');
model.component('model_comp').selection('cyl25').set('top', '+1[mm]');
model.component('model_comp').selection('cyl25').set('bottom', '-L_borehole-1[mm]');
model.component('model_comp').selection('cyl25').set('pos', {'-borehole_spacing' '-borehole_spacing' '0'});
model.component('model_comp').selection('cyl25').set('condition', 'inside');

model.component('model_comp').variable.create('variables');
model.component('model_comp').variable('variables').set('T_wall1', 'aveop1(T)');
model.component('model_comp').variable('variables').set('T_wall2', 'aveop2(T)');
model.component('model_comp').variable('variables').set('T_wall3', 'aveop3(T)');
model.component('model_comp').variable('variables').set('T_wall4', 'aveop4(T)');
model.component('model_comp').variable('variables').set('T_wall5', 'aveop5(T)');
model.component('model_comp').variable('variables').set('T_wall6', 'aveop6(T)');
model.component('model_comp').variable('variables').set('T_wall7', 'aveop7(T)');
model.component('model_comp').variable('variables').set('T_wall8', 'aveop8(T)');
model.component('model_comp').variable('variables').set('T_wall9', 'aveop9(T)');
model.component('model_comp').variable('variables').set('T_wall10', 'aveop10(T)');
model.component('model_comp').variable('variables').set('T_wall11', 'aveop11(T)');
model.component('model_comp').variable('variables').set('T_wall12', 'aveop12(T)');
model.component('model_comp').variable('variables').set('T_wall13', 'aveop13(T)');
model.component('model_comp').variable('variables').set('T_wall14', 'aveop14(T)');
model.component('model_comp').variable('variables').set('T_wall15', 'aveop15(T)');
model.component('model_comp').variable('variables').set('T_wall16', 'aveop16(T)');
model.component('model_comp').variable('variables').set('T_wall17', 'aveop17(T)');
model.component('model_comp').variable('variables').set('T_wall18', 'aveop18(T)');
model.component('model_comp').variable('variables').set('T_wall19', 'aveop19(T)');
model.component('model_comp').variable('variables').set('T_wall20', 'aveop20(T)');
model.component('model_comp').variable('variables').set('T_wall21', 'aveop21(T)');
model.component('model_comp').variable('variables').set('T_wall22', 'aveop22(T)');
model.component('model_comp').variable('variables').set('T_wall23', 'aveop23(T)');
model.component('model_comp').variable('variables').set('T_wall24', 'aveop24(T)');
model.component('model_comp').variable('variables').set('T_wall25', 'aveop25(T)');
model.component('model_comp').variable('variables').set('Q_wall1', 'intop1(T)');
model.component('model_comp').variable('variables').set('Q_wall2', 'intop2(T)');
model.component('model_comp').variable('variables').set('Q_wall3', 'intop3(T)');
model.component('model_comp').variable('variables').set('Q_wall4', 'intop4(T)');
model.component('model_comp').variable('variables').set('Q_wall5', 'intop5(T)');
model.component('model_comp').variable('variables').set('Q_wall6', 'intop6(T)');
model.component('model_comp').variable('variables').set('Q_wall7', 'intop7(T)');
model.component('model_comp').variable('variables').set('Q_wall8', 'intop8(T)');
model.component('model_comp').variable('variables').set('Q_wall9', 'intop9(T)');
model.component('model_comp').variable('variables').set('Q_wall10', 'intop10(T)');
model.component('model_comp').variable('variables').set('Q_wall11', 'intop11(T)');
model.component('model_comp').variable('variables').set('Q_wall12', 'intop12(T)');
model.component('model_comp').variable('variables').set('Q_wall13', 'intop13(T)');
model.component('model_comp').variable('variables').set('Q_wall14', 'intop14(T)');
model.component('model_comp').variable('variables').set('Q_wall15', 'intop15(T)');
model.component('model_comp').variable('variables').set('Q_wall16', 'intop16(T)');
model.component('model_comp').variable('variables').set('Q_wall17', 'intop17(T)');
model.component('model_comp').variable('variables').set('Q_wall18', 'intop18(T)');
model.component('model_comp').variable('variables').set('Q_wall19', 'intop19(T)');
model.component('model_comp').variable('variables').set('Q_wall20', 'intop20(T)');
model.component('model_comp').variable('variables').set('Q_wall21', 'intop21(T)');
model.component('model_comp').variable('variables').set('Q_wall22', 'intop22(T)');
model.component('model_comp').variable('variables').set('Q_wall23', 'intop23(T)');
model.component('model_comp').variable('variables').set('Q_wall24', 'intop24(T)');
model.component('model_comp').variable('variables').set('Q_wall25', 'intop25(T)');
model.component('model_comp').variable('variables').set('heat_extraction', 'monthly_profile(t)*annual_energy_demand/monthly_hours');

model.component('model_comp').cpl.create('intop1', 'Integration');
model.component('model_comp').cpl.create('intop2', 'Integration');
model.component('model_comp').cpl.create('intop3', 'Integration');
model.component('model_comp').cpl.create('intop4', 'Integration');
model.component('model_comp').cpl.create('intop5', 'Integration');
model.component('model_comp').cpl.create('intop6', 'Integration');
model.component('model_comp').cpl.create('intop7', 'Integration');
model.component('model_comp').cpl.create('intop8', 'Integration');
model.component('model_comp').cpl.create('intop9', 'Integration');
model.component('model_comp').cpl.create('intop10', 'Integration');
model.component('model_comp').cpl.create('intop11', 'Integration');
model.component('model_comp').cpl.create('intop12', 'Integration');
model.component('model_comp').cpl.create('intop13', 'Integration');
model.component('model_comp').cpl.create('intop14', 'Integration');
model.component('model_comp').cpl.create('intop15', 'Integration');
model.component('model_comp').cpl.create('intop16', 'Integration');
model.component('model_comp').cpl.create('intop17', 'Integration');
model.component('model_comp').cpl.create('intop18', 'Integration');
model.component('model_comp').cpl.create('intop19', 'Integration');
model.component('model_comp').cpl.create('intop20', 'Integration');
model.component('model_comp').cpl.create('intop21', 'Integration');
model.component('model_comp').cpl.create('intop22', 'Integration');
model.component('model_comp').cpl.create('intop23', 'Integration');
model.component('model_comp').cpl.create('intop24', 'Integration');
model.component('model_comp').cpl.create('intop25', 'Integration');
model.component('model_comp').cpl.create('aveop1', 'Average');
model.component('model_comp').cpl.create('aveop2', 'Average');
model.component('model_comp').cpl.create('aveop3', 'Average');
model.component('model_comp').cpl.create('aveop4', 'Average');
model.component('model_comp').cpl.create('aveop5', 'Average');
model.component('model_comp').cpl.create('aveop6', 'Average');
model.component('model_comp').cpl.create('aveop7', 'Average');
model.component('model_comp').cpl.create('aveop8', 'Average');
model.component('model_comp').cpl.create('aveop9', 'Average');
model.component('model_comp').cpl.create('aveop10', 'Average');
model.component('model_comp').cpl.create('aveop11', 'Average');
model.component('model_comp').cpl.create('aveop12', 'Average');
model.component('model_comp').cpl.create('aveop13', 'Average');
model.component('model_comp').cpl.create('aveop14', 'Average');
model.component('model_comp').cpl.create('aveop15', 'Average');
model.component('model_comp').cpl.create('aveop16', 'Average');
model.component('model_comp').cpl.create('aveop17', 'Average');
model.component('model_comp').cpl.create('aveop18', 'Average');
model.component('model_comp').cpl.create('aveop19', 'Average');
model.component('model_comp').cpl.create('aveop20', 'Average');
model.component('model_comp').cpl.create('aveop21', 'Average');
model.component('model_comp').cpl.create('aveop22', 'Average');
model.component('model_comp').cpl.create('aveop23', 'Average');
model.component('model_comp').cpl.create('aveop24', 'Average');
model.component('model_comp').cpl.create('aveop25', 'Average');
model.component('model_comp').cpl('intop1').selection.named('cyl1');
model.component('model_comp').cpl('intop2').selection.named('cyl2');
model.component('model_comp').cpl('intop3').selection.named('cyl3');
model.component('model_comp').cpl('intop4').selection.named('cyl4');
model.component('model_comp').cpl('intop5').selection.named('cyl5');
model.component('model_comp').cpl('intop6').selection.named('cyl6');
model.component('model_comp').cpl('intop7').selection.named('cyl7');
model.component('model_comp').cpl('intop8').selection.named('cyl8');
model.component('model_comp').cpl('intop9').selection.named('cyl9');
model.component('model_comp').cpl('intop10').selection.named('cyl10');
model.component('model_comp').cpl('intop11').selection.named('cyl11');
model.component('model_comp').cpl('intop12').selection.named('cyl12');
model.component('model_comp').cpl('intop13').selection.named('cyl13');
model.component('model_comp').cpl('intop14').selection.named('cyl14');
model.component('model_comp').cpl('intop15').selection.named('cyl15');
model.component('model_comp').cpl('intop16').selection.named('cyl16');
model.component('model_comp').cpl('intop17').selection.named('cyl17');
model.component('model_comp').cpl('intop18').selection.named('cyl18');
model.component('model_comp').cpl('intop19').selection.named('cyl19');
model.component('model_comp').cpl('intop20').selection.named('cyl20');
model.component('model_comp').cpl('intop21').selection.named('cyl21');
model.component('model_comp').cpl('intop22').selection.named('cyl22');
model.component('model_comp').cpl('intop23').selection.named('cyl23');
model.component('model_comp').cpl('intop24').selection.named('cyl24');
model.component('model_comp').cpl('intop25').selection.named('cyl25');
model.component('model_comp').cpl('aveop1').selection.named('cyl1');
model.component('model_comp').cpl('aveop2').selection.named('cyl2');
model.component('model_comp').cpl('aveop3').selection.named('cyl3');
model.component('model_comp').cpl('aveop4').selection.named('cyl4');
model.component('model_comp').cpl('aveop5').selection.named('cyl5');
model.component('model_comp').cpl('aveop6').selection.named('cyl6');
model.component('model_comp').cpl('aveop7').selection.named('cyl7');
model.component('model_comp').cpl('aveop8').selection.named('cyl8');
model.component('model_comp').cpl('aveop9').selection.named('cyl9');
model.component('model_comp').cpl('aveop10').selection.named('cyl10');
model.component('model_comp').cpl('aveop11').selection.named('cyl11');
model.component('model_comp').cpl('aveop12').selection.named('cyl12');
model.component('model_comp').cpl('aveop13').selection.named('cyl13');
model.component('model_comp').cpl('aveop14').selection.named('cyl14');
model.component('model_comp').cpl('aveop15').selection.named('cyl15');
model.component('model_comp').cpl('aveop16').selection.named('cyl16');
model.component('model_comp').cpl('aveop17').selection.named('cyl17');
model.component('model_comp').cpl('aveop18').selection.named('cyl18');
model.component('model_comp').cpl('aveop19').selection.named('cyl19');
model.component('model_comp').cpl('aveop20').selection.named('cyl20');
model.component('model_comp').cpl('aveop21').selection.named('cyl21');
model.component('model_comp').cpl('aveop22').selection.named('cyl22');
model.component('model_comp').cpl('aveop23').selection.named('cyl23');
model.component('model_comp').cpl('aveop24').selection.named('cyl24');
model.component('model_comp').cpl('aveop25').selection.named('cyl25');

model.component('model_comp').physics.create('model_physics', 'HeatTransfer', 'model_geom');
model.component('model_comp').physics('model_physics').create('temp_bc', 'TemperatureBoundary', 2);
model.component('model_comp').physics('model_physics').feature('temp_bc').selection.set([7 11 15 19 23 54 58 62 66 70 100 104 108 112 116 146 150 154 158 162 192 196 200 204 208]);
model.component('model_comp').physics('model_physics').create('geo_flux_bc', 'HeatFluxBoundary', 2);
model.component('model_comp').physics('model_physics').feature('geo_flux_bc').selection.set([3]);
model.component('model_comp').physics('model_physics').create('wall_flux_bc', 'HeatFluxBoundary', 2);
model.component('model_comp').physics('model_physics').feature('wall_flux_bc').selection.named('cyl1');
model.component('model_comp').physics('model_physics').create('periodic_bc_1', 'PeriodicHeat', 2);
model.component('model_comp').physics('model_physics').feature('periodic_bc_1').selection.set([1 4 8 12 16 20 235 236 237 238 239 240]);
model.component('model_comp').physics('model_physics').create('periodic_bc_2', 'PeriodicHeat', 2);
model.component('model_comp').physics('model_physics').feature('periodic_bc_2').selection.set([2 5 24 25 98 117 144 163 190 209]);

model.component('model_comp').mesh('model_mesh').create('edge_mesh', 'Edge');
model.component('model_comp').mesh('model_mesh').create('tri_mesh', 'FreeTri');
model.component('model_comp').mesh('model_mesh').create('swept_mesh', 'Sweep');
model.component('model_comp').mesh('model_mesh').create('tetra_mesh', 'FreeTet');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').selection.set([37 38 42 43 47 48 52 53 57 58 61 64 67 70 73 76 79 82 85 88 125 126 130 131 135 136 140 141 145 146 149 152 155 158 161 164 167 170 173 176 213 214 218 219 223 224 228 229 233 234 237 240 243 246 249 252 255 258 261 264 301 302 306 307 311 312 316 317 321 322 325 328 331 334 337 340 343 346 349 352 389 390 394 395 399 400 404 405 409 410 413 416 419 422 425 428 431 434 437 440]);
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').create('edge_mesh_size', 'Size');
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').selection.set([7 11 15 19 23 54 58 62 66 70 100 104 108 112 116 146 150 154 158 162 192 196 200 204 208]);
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').create('tri_mesh_size', 'Size');
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').selection.geom('model_geom', 3);
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').selection.set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26]);
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').create('swept_mesh_distr', 'Distribution');
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').selection.geom('model_geom', 3);
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').selection.set([1]);
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').create('tetra_mesh_size', 'Size');

model.component('model_comp').physics('model_physics').prop('ShapeProperty').set('order_temperature', 1);
model.component('model_comp').physics('model_physics').feature('solid1').set('k', {'k_rock'; '0'; '0'; '0'; 'k_rock'; '0'; '0'; '0'; 'k_rock'});
model.component('model_comp').physics('model_physics').feature('solid1').set('rho', 'rho_rock');
model.component('model_comp').physics('model_physics').feature('solid1').set('Cp', 'Cp_rock');
model.component('model_comp').physics('model_physics').feature('init1').set('Tinit', 'T_initial(z)');
model.component('model_comp').physics('model_physics').feature('temp_bc').set('T0', 'T_surface');
model.component('model_comp').physics('model_physics').feature('temp_bc').label('Surface Temperature');
model.component('model_comp').physics('model_physics').feature('geo_flux_bc').set('q0', 'q_geothermal');
model.component('model_comp').physics('model_physics').feature('geo_flux_bc').label('Geothermal Heat Flux');
model.component('model_comp').physics('model_physics').feature('wall_flux_bc').set('q0', '-heat_extraction/A_wall');
model.component('model_comp').physics('model_physics').feature('wall_flux_bc').label('Borehole Wall Heat Flux');

model.component('model_comp').mesh('model_mesh').feature('edge_mesh').label('Borehole Collar Edge Mesh');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').label('Edge Size');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').set('custom', 'on');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').set('hmax', '20[mm]');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').set('hmaxactive', true);
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').set('hmin', '1[mm]');
model.component('model_comp').mesh('model_mesh').feature('edge_mesh').feature('edge_mesh_size').set('hminactive', true);
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').label('Surface Triangular Mesh');
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').set('method', 'del');
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').feature('tri_mesh_size').label('Triangular Mesh Size');
model.component('model_comp').mesh('model_mesh').feature('tri_mesh').feature('tri_mesh_size').set('hauto', 1);
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').label('Swept Mesh');
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').feature('swept_mesh_distr').label('Swept Mesh Distribution');
model.component('model_comp').mesh('model_mesh').feature('swept_mesh').feature('swept_mesh_distr').set('numelem', 10);
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').label('Tetrahedral Mesh');
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').set('method', 'del');
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').feature('tetra_mesh_size').label('Tetrahedral Mesh Size');
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').feature('tetra_mesh_size').set('hauto', 2);
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').feature('tetra_mesh_size').set('custom', 'on');
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').feature('tetra_mesh_size').set('hgrad', 1.2);
model.component('model_comp').mesh('model_mesh').feature('tetra_mesh').feature('tetra_mesh_size').set('hgradactive', true);
model.component('model_comp').mesh('model_mesh').run;

model.frame('mesh1').sorder(1);

model.component('model_comp').physics('model_physics').feature('solid1').set('k_mat', 'userdef');
model.component('model_comp').physics('model_physics').feature('solid1').set('rho_mat', 'userdef');
model.component('model_comp').physics('model_physics').feature('solid1').set('Cp_mat', 'userdef');

model.study.create('std1');
model.study('std1').create('time', 'Transient');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature.remove('dDef');
model.sol('sol1').feature('t1').feature.remove('fcDef');

model.study('std1').label('Study');
model.study('std1').feature('time').set('tunit', 'd');
model.study('std1').feature('time').set('tlist', 'range(0,10,50*365.25)');

model.sol('sol1').attach('std1');
model.sol('sol1').label('Solution');
model.sol('sol1').feature('v1').label('Dependent Variables');
model.sol('sol1').feature('v1').set('clist', {'range(0,10,50*365.25)'});
model.sol('sol1').feature('t1').label('Time-Dependent Solver');
model.sol('sol1').feature('t1').set('control', 'user');
model.sol('sol1').feature('t1').set('tunit', 'd');
model.sol('sol1').feature('t1').set('tlist', 'range(0,10,50*365.25)');
model.sol('sol1').feature('t1').set('maxstepbdf', 10);
model.sol('sol1').feature('t1').set('maxstepbdfactive', true);
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').feature('d1').label('Direct');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');

out = model;
